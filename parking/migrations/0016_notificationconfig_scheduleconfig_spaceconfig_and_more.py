# Generated by Django 5.1.3 on 2025-08-01 21:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('parking', '0015_add_configuration_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('entry', 'Entrada de Vehículo'), ('exit', 'Salida de Vehículo'), ('time_expired', 'Tiempo Vencido'), ('payment', 'Pago Realizado'), ('reservation', 'Reserva Confirmada'), ('space_full', 'Espacio Lleno')], max_length=20, verbose_name='Tipo de Notificación')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('message_template', models.TextField(verbose_name='Plantilla del Mensaje')),
                ('method', models.CharField(choices=[('email', 'Correo Electrónico'), ('sms', 'SMS'), ('push', 'Notificación Push'), ('system', 'Notificación del Sistema')], max_length=10, verbose_name='Método de Envío')),
                ('trigger_minutes', models.IntegerField(default=0, verbose_name='Minutos antes del evento')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Configuración de Notificación',
                'verbose_name_plural': 'Configuraciones de Notificaciones',
            },
        ),
        migrations.CreateModel(
            name='ScheduleConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sábado'), (6, 'Domingo')], verbose_name='Día de la Semana')),
                ('opening_time', models.TimeField(verbose_name='Hora de Apertura')),
                ('closing_time', models.TimeField(verbose_name='Hora de Cierre')),
                ('is_open', models.BooleanField(default=True, verbose_name='Abierto')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Configuración de Horario',
                'verbose_name_plural': 'Configuraciones de Horarios',
                'unique_together': {('tenant', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='SpaceConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_spaces', models.IntegerField(verbose_name='Total de Espacios')),
                ('reserved_spaces', models.IntegerField(default=0, verbose_name='Espacios Reservados')),
                ('max_time_hours', models.IntegerField(default=0, verbose_name='Tiempo Máximo (horas)')),
                ('grace_period_minutes', models.IntegerField(default=15, verbose_name='Período de Gracia (minutos)')),
                ('allow_reservations', models.BooleanField(default=True, verbose_name='Permitir Reservas')),
                ('auto_assign_spaces', models.BooleanField(default=True, verbose_name='Asignación Automática')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.vehiclecategory', verbose_name='Categoría')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Configuración de Espacios',
                'verbose_name_plural': 'Configuraciones de Espacios',
                'unique_together': {('tenant', 'category')},
            },
        ),
        migrations.CreateModel(
            name='TariffConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tarifa por Hora')),
                ('daily_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tarifa Diaria')),
                ('monthly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tarifa Mensual')),
                ('minimum_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cargo Mínimo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.vehiclecategory', verbose_name='Categoría')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Configuración de Tarifa',
                'verbose_name_plural': 'Configuraciones de Tarifas',
                'unique_together': {('tenant', 'category')},
            },
        ),
    ]
